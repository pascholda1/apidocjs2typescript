[
  {
    "type": "delete",
    "url": "/category",
    "title": "Delete a category",
    "version": "0.3.0",
    "name": "DeleteCategory",
    "group": "Category_official",
    "description": "<p>Delete a category. Sample request has been disabled here.</p>",
    "query": [
      {
        "group": "Query",
        "type": "Number",
        "optional": false,
        "field": "id",
        "isArray": false,
        "description": "<p>Category ID.</p>"
      }
    ],
    "parameter": {
      "examples": [
        {
          "title": "Some json code:",
          "content": "{\n  \"user\": \"Sample User\",\n   \"payload\": {\n     \"test\": [\n       \"code\": \"\n         public class HelloWorldTest {\n           HelloWorld hw = new HelloWorld();\n           @Test\n           public void testOkay {\n           assertEquals(\\\"HelloWorld\\\", hw.getMsg());\n         }\n      }\"\n     ]\n   }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "example.js",
    "groupTitle": "Category_(official)"
  },
  {
    "type": "get",
    "url": "/category",
    "title": "Get a category",
    "version": "0.3.0",
    "sampleRequest": [
      {
        "url": "http://www.example.com"
      }
    ],
    "name": "GetCategory",
    "group": "Category_official",
    "description": "<p>Get a category. Sample request on example.com here.</p>",
    "query": [
      {
        "group": "Query",
        "type": "Number",
        "optional": false,
        "field": "id",
        "isArray": false,
        "description": "<p>Category ID.</p>"
      }
    ],
    "body": [
      {
        "group": "Body",
        "type": "String",
        "optional": false,
        "field": "custom.id",
        "isArray": false,
        "description": "<p>Custom ID with dot.</p>"
      }
    ],
    "filename": "example.js",
    "groupTitle": "Category_(official)"
  },
  {
    "type": "post",
    "url": "/city",
    "title": "Create a new city",
    "version": "0.3.0",
    "name": "CreateCity",
    "group": "City",
    "description": "<p>Create a new city.</p>",
    "body": [
      {
        "group": "Body",
        "type": "String",
        "optional": false,
        "field": "name",
        "isArray": false,
        "defaultValue": "Paris",
        "description": "<p>Name of the city</p>"
      }
    ],
    "query": [
      {
        "group": "Query",
        "type": "String",
        "allowedValues": [
          "Aerial",
          "Land",
          "Underwater"
        ],
        "optional": false,
        "field": "view",
        "isArray": false,
        "defaultValue": "Aerial",
        "description": "<p>Type of view.</p>"
      },
      {
        "group": "Query",
        "type": "Number",
        "optional": false,
        "field": "zoom",
        "isArray": false,
        "description": "<p>Zoom.</p>"
      }
    ],
    "filename": "example.js",
    "groupTitle": "City",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/city"
      }
    ]
  },
  {
    "type": "delete",
    "url": "/user/:id",
    "title": "Delete user",
    "version": "0.3.0",
    "name": "DeleteUser",
    "group": "User",
    "permission": [
      {
        "name": "admin",
        "title": "Admin access rights needed.",
        "description": "<p>Optionally you can write here further Informations about the permission.</p> <p>An &quot;apiDefinePermission&quot;-block can have an &quot;apiVersion&quot;, so you can attach the block to a specific version.</p>"
      }
    ],
    "description": "<p>Be careful! This will remove all the data associated with that user!</p>",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "isArray": false,
            "description": "<p>The token can be generated from your user profile.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header-Example",
          "content": "\"Authorization: token 5f048fe\"",
          "type": "Header"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p><code>id</code> of the user.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Curl example",
        "content": "curl -X DELETE -H \"Authorization: token 5f048fe\" -i https://api.example.com/user/4711",
        "type": "bash"
      },
      {
        "title": "Javascript example",
        "content": "const client = AcmeCorpApi('5f048fe');\nconst user = client.deleteUser(42);",
        "type": "js"
      },
      {
        "title": "Python example",
        "content": "client = AcmeCorpApi.Client(token=\"5f048fe\")\nuser = client.delete_user(42)",
        "type": "python"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "result",
            "isArray": false,
            "description": "<p><code>ok</code> if everything went fine.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": true,
            "field": "nullableField",
            "isArray": false,
            "description": "<p>This response field is not always there (can be null).</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Example",
          "content": "HTTP/1.1 200 OK\n{\n    \"result\": \"ok\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NoAccessRight",
            "isArray": false,
            "description": "<p>Only authenticated Admins can access the data.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UserNotFound",
            "isArray": false,
            "description": "<p>The <code>id</code> of the User was not found.</p>"
          }
        ],
        "500 Internal Server Error": [
          {
            "group": "500 Internal Server Error",
            "optional": false,
            "field": "InternalServerError",
            "isArray": false,
            "description": "<p>The server encountered an internal error.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Response (example):",
          "content": "HTTP/1.1 401 Not Authenticated\n{\n  \"error\": \"NoAccessRight\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "example.js",
    "groupTitle": "User",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/user/:id"
      }
    ]
  },
  {
    "type": "get",
    "url": "/user/:region/:id/:opt",
    "title": "Read data of a User",
    "version": "0.3.0",
    "name": "GetUser",
    "group": "User",
    "permission": [
      {
        "name": "admin:computer",
        "title": "User access only",
        "description": "<p>This optional description belong to to the group admin.</p>"
      }
    ],
    "description": "<p>Compare version 0.3.0 with 0.2.0 and you will see the green markers with new items in version 0.3.0 and red markers with removed items since 0.2.0.</p>",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "isArray": false,
            "description": "<p>The token can be generated from your user profile.</p>"
          },
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "X-Apidoc-Cool-Factor",
            "isArray": false,
            "defaultValue": "big",
            "description": "<p>Some other header with a default value.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Header-Example",
          "content": "\"Authorization: token 5f048fe\"",
          "type": "Header"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p>User unique ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "region",
            "isArray": false,
            "defaultValue": "fr-par",
            "description": "<p>User region</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "opt",
            "isArray": false,
            "description": "<p>An optional param</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Curl example",
        "content": "curl -H \"Authorization: token 5f048fe\" -i https://api.example.com/user/fr-par/4711\ncurl -H \"Authorization: token 5f048fe\" -H \"X-Apidoc-Cool-Factor: superbig\" -i https://api.example.com/user/de-ber/1337/yep",
        "type": "bash"
      },
      {
        "title": "Javascript example",
        "content": "const client = AcmeCorpApi('5f048fe');\nconst user = client.getUser(42);",
        "type": "js"
      },
      {
        "title": "Python example",
        "content": "client = AcmeCorpApi.Client(token=\"5f048fe\")\nuser = client.get_user(42)",
        "type": "python"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p>The Users-ID.</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "registered",
            "isArray": false,
            "description": "<p>Registration Date.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "name",
            "isArray": false,
            "description": "<p>Fullname of the User.</p>"
          },
          {
            "group": "Success 200",
            "type": "String[]",
            "optional": false,
            "field": "nicknames",
            "isArray": true,
            "description": "<p>List of Users nicknames (Array of Strings).</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "profile",
            "isArray": false,
            "description": "<p>Profile data (example for an Object)</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "parentNode": {
              "path": "profile",
              "field": "profile",
              "type": "Object",
              "isArray": false
            },
            "field": "profile.age",
            "isArray": false,
            "description": "<p>Users age.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "parentNode": {
              "path": "profile",
              "field": "profile",
              "type": "Object",
              "isArray": false
            },
            "field": "profile.image",
            "isArray": false,
            "description": "<p>Avatar-Image.</p>"
          },
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "options",
            "isArray": true,
            "description": "<p>List of Users options (Array of Objects).</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "parentNode": {
              "path": "options",
              "field": "options",
              "type": "Object[]",
              "isArray": true
            },
            "field": "options.name",
            "isArray": false,
            "description": "<p>Option Name.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "parentNode": {
              "path": "options",
              "field": "options",
              "type": "Object[]",
              "isArray": true
            },
            "field": "options.value",
            "isArray": false,
            "description": "<p>Option Value.</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NoAccessRight",
            "isArray": false,
            "description": "<p>Only authenticated Admins can access the data.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UserNotFound",
            "isArray": false,
            "description": "<p>The <code>id</code> of the User was not found.</p>"
          }
        ],
        "500 Internal Server Error": [
          {
            "group": "500 Internal Server Error",
            "optional": false,
            "field": "InternalServerError",
            "isArray": false,
            "description": "<p>The server encountered an internal error</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Response (example):",
          "content": "HTTP/1.1 401 Not Authenticated\n{\n  \"error\": \"NoAccessRight\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "example.js",
    "groupTitle": "User",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/user/:region/:id/:opt"
      }
    ]
  },
  {
    "type": "get",
    "url": "/user/:id",
    "title": "Read data of a User",
    "version": "0.2.0",
    "name": "GetUser2",
    "group": "User",
    "permission": [
      {
        "name": "admin",
        "title": "This title is visible in version 0.1.0 and 0.2.0",
        "description": ""
      }
    ],
    "description": "<p>Here you can describe the function. Multilines are possible.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p>The Users-ID.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Curl example",
        "content": "curl -i https://api.example.com/user/4711",
        "type": "bash"
      },
      {
        "title": "Javascript example",
        "content": "const client = AcmeCorpApi();\nconst user = client.getUser(42);",
        "type": "js"
      },
      {
        "title": "Python example",
        "content": "client = AcmeCorpApi.Client()\nuser = client.get_user(42)",
        "type": "python"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p>The Users-ID.</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "name",
            "isArray": false,
            "description": "<p>Fullname of the User.</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UserNotFound",
            "isArray": false,
            "description": "<p>The <code>id</code> of the User was not found.</p>"
          }
        ]
      }
    },
    "filename": "_apidoc.js",
    "groupTitle": "User",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/user/:id"
      }
    ]
  },
  {
    "type": "get",
    "url": "/user/:id",
    "title": "Read data of a User",
    "version": "0.1.0",
    "name": "GetUser3",
    "group": "User",
    "permission": [
      {
        "name": "admin",
        "title": "This title is visible in version 0.1.0 and 0.2.0",
        "description": ""
      }
    ],
    "description": "<p>Here you can describe the function. Multilines are possible.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p>The Users-ID.</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p>The Users-ID.</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "name",
            "isArray": false,
            "description": "<p>Fullname of the User.</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UserNotFound",
            "isArray": false,
            "description": "<p>The error description text in version 0.1.0.</p>"
          }
        ]
      }
    },
    "filename": "_apidoc.js",
    "groupTitle": "User",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/user/:id"
      }
    ]
  },
  {
    "type": "post",
    "url": "/user",
    "title": "Create a new User",
    "version": "0.3.0",
    "name": "PostUser",
    "group": "User",
    "permission": [
      {
        "name": "none"
      }
    ],
    "description": "<p>In this case &quot;apiErrorStructure&quot; is defined and used. Define blocks with params that will be used in several functions, so you dont have to rewrite them.</p>",
    "body": [
      {
        "group": "Body",
        "type": "Number",
        "optional": false,
        "field": "age",
        "isArray": false,
        "description": "<p>Age of the User</p>"
      },
      {
        "group": "Body",
        "type": "String",
        "optional": false,
        "field": "name",
        "isArray": false,
        "defaultValue": "Caroline",
        "description": "<p>Name of the User</p>"
      },
      {
        "group": "Body",
        "type": "Object",
        "optional": false,
        "field": "extraInfo",
        "isArray": false,
        "description": "<p>Date when user was hired</p>"
      },
      {
        "group": "Body",
        "type": "Date",
        "optional": false,
        "parentNode": {
          "path": "extraInfo",
          "field": "extraInfo",
          "type": "Object",
          "isArray": false
        },
        "field": "extraInfo.hireDate",
        "isArray": false,
        "description": "<p>Date when user was hired</p>"
      },
      {
        "group": "Body",
        "type": "Date",
        "optional": false,
        "parentNode": {
          "path": "extraInfo",
          "field": "extraInfo",
          "type": "Object",
          "isArray": false
        },
        "field": "extraInfo.hireDateWithDefault",
        "isArray": false,
        "defaultValue": "2021-09-01",
        "description": "<p>Date when user was hired with default</p>"
      },
      {
        "group": "Body",
        "type": "String[]",
        "optional": false,
        "parentNode": {
          "path": "extraInfo",
          "field": "extraInfo",
          "type": "Object",
          "isArray": false
        },
        "field": "extraInfo.nicknames",
        "isArray": true,
        "description": "<p>List of Users nicknames (Array of Strings)</p>"
      },
      {
        "group": "Body",
        "type": "Boolean",
        "optional": false,
        "parentNode": {
          "path": "extraInfo",
          "field": "extraInfo",
          "type": "Object",
          "isArray": false
        },
        "field": "extraInfo.isVegan",
        "isArray": false,
        "defaultValue": "true",
        "description": "<p>Is the user vegan? (boolean with default)</p>",
        "checked": true
      },
      {
        "group": "Body",
        "type": "Object",
        "optional": false,
        "parentNode": {
          "path": "extraInfo",
          "field": "extraInfo",
          "type": "Object",
          "isArray": false
        },
        "field": "extraInfo.secrets",
        "isArray": false,
        "description": "<p>Secret object</p>"
      },
      {
        "group": "Body",
        "type": "String",
        "optional": false,
        "parentNode": {
          "path": "extraInfo.secrets",
          "parentNode": {
            "path": "extraInfo",
            "field": "extraInfo",
            "type": "Object",
            "isArray": false
          },
          "field": "extraInfo.secrets",
          "type": "Object",
          "isArray": false
        },
        "field": "extraInfo.secrets.crush",
        "isArray": false,
        "description": "<p>The user secret crush</p>"
      },
      {
        "group": "Body",
        "type": "Number",
        "optional": false,
        "parentNode": {
          "path": "extraInfo.secrets",
          "parentNode": {
            "path": "extraInfo",
            "field": "extraInfo",
            "type": "Object",
            "isArray": false
          },
          "field": "extraInfo.secrets",
          "type": "Object",
          "isArray": false
        },
        "field": "extraInfo.secrets.hair",
        "isArray": false,
        "defaultValue": "1000",
        "description": "<p>Number of hair of user</p>"
      },
      {
        "group": "Body",
        "type": "Object[]",
        "optional": false,
        "parentNode": {
          "path": "extraInfo.secrets",
          "parentNode": {
            "path": "extraInfo",
            "field": "extraInfo",
            "type": "Object",
            "isArray": false
          },
          "field": "extraInfo.secrets",
          "type": "Object",
          "isArray": false
        },
        "field": "extraInfo.secrets.deepSecrets",
        "isArray": true,
        "description": "<p>Deep user secrets crush (array of objects)</p>"
      },
      {
        "group": "Body",
        "type": "String",
        "optional": false,
        "parentNode": {
          "path": "extraInfo.secrets.deepSecrets",
          "parentNode": {
            "path": "extraInfo.secrets",
            "parentNode": {
              "path": "extraInfo",
              "field": "extraInfo",
              "type": "Object",
              "isArray": false
            },
            "field": "extraInfo.secrets",
            "type": "Object",
            "isArray": false
          },
          "field": "extraInfo.secrets.deepSecrets",
          "type": "Object[]",
          "isArray": true
        },
        "field": "extraInfo.secrets.deepSecrets.key",
        "isArray": false,
        "description": "<p>A deep user secret key</p>"
      },
      {
        "group": "Body",
        "type": "Number",
        "optional": false,
        "parentNode": {
          "path": "extraInfo.secrets.deepSecrets",
          "parentNode": {
            "path": "extraInfo.secrets",
            "parentNode": {
              "path": "extraInfo",
              "field": "extraInfo",
              "type": "Object",
              "isArray": false
            },
            "field": "extraInfo.secrets",
            "type": "Object",
            "isArray": false
          },
          "field": "extraInfo.secrets.deepSecrets",
          "type": "Object[]",
          "isArray": true
        },
        "field": "extraInfo.secrets.deepSecrets.number",
        "isArray": false,
        "description": "<p>A deep user secret key</p>"
      },
      {
        "group": "Body",
        "type": "String",
        "optional": false,
        "parentNode": {
          "path": "extraInfo.secrets.deepSecrets",
          "parentNode": {
            "path": "extraInfo.secrets",
            "parentNode": {
              "path": "extraInfo",
              "field": "extraInfo",
              "type": "Object",
              "isArray": false
            },
            "field": "extraInfo.secrets",
            "type": "Object",
            "isArray": false
          },
          "field": "extraInfo.secrets.deepSecrets",
          "type": "Object[]",
          "isArray": true
        },
        "field": "extraInfo.secrets.deepSecrets.name.particle",
        "isArray": false,
        "description": "<p>A deep user secret name particle with dot</p>"
      },
      {
        "group": "Body",
        "type": "Boolean",
        "optional": false,
        "parentNode": {
          "path": "extraInfo",
          "field": "extraInfo",
          "type": "Object",
          "isArray": false
        },
        "field": "extraInfo.isAlive",
        "isArray": false,
        "description": "<p>Is the user alive? (boolean with no default)</p>",
        "checked": false
      },
      {
        "group": "Body",
        "type": "String",
        "optional": false,
        "field": "custom.property",
        "isArray": false,
        "description": "<p>Custom property with dot</p>"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p>The new Users-ID.</p>"
          }
        ]
      }
    },
    "filename": "example.js",
    "groupTitle": "User",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/user"
      }
    ],
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NoAccessRight",
            "isArray": false,
            "description": "<p>Only authenticated Admins can access the data.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UserNameTooShort",
            "isArray": false,
            "description": "<p>Minimum of 5 characters required.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Response (example):",
          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"UserNameTooShort\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/user",
    "title": "Create a User",
    "version": "0.2.0",
    "name": "PostUser2",
    "group": "User",
    "permission": [
      {
        "name": "none"
      }
    ],
    "description": "<p>In this case &quot;apiErrorStructure&quot; is defined and used. Define blocks with params that will be used in several functions, so you dont have to rewrite them.</p>",
    "body": [
      {
        "group": "Body",
        "type": "String",
        "optional": false,
        "field": "name",
        "isArray": false,
        "description": "<p>Name of the User.</p>"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p>The Users-ID.</p>"
          }
        ]
      }
    },
    "filename": "_apidoc.js",
    "groupTitle": "User",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/user"
      }
    ],
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NoAccessRight",
            "isArray": false,
            "description": "<p>Only authenticated Admins can access the data.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UserNameTooShort",
            "isArray": false,
            "description": "<p>Minimum of 5 characters required.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Response (example):",
          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"UserNameTooShort\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/user",
    "title": "Missing URL parameter",
    "version": "0.2.0",
    "name": "PostUser3",
    "group": "User",
    "permission": [
      {
        "name": "none"
      }
    ],
    "description": "<p>@apiParam 'name' was defined but does not appear in URL of @api</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "isArray": false,
            "description": "<p>Name of the User.</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p>The Users-ID.</p>"
          }
        ]
      }
    },
    "filename": "example-warnings.js",
    "groupTitle": "User",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/user"
      }
    ],
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NoAccessRight",
            "isArray": false,
            "description": "<p>Only authenticated Admins can access the data.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UserNameTooShort",
            "isArray": false,
            "description": "<p>Minimum of 5 characters required.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Response (example):",
          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"UserNameTooShort\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "put",
    "url": "/user/:id",
    "title": "Change a User",
    "version": "0.3.0",
    "name": "PutUser",
    "group": "User",
    "permission": [
      {
        "name": "none"
      }
    ],
    "description": "<p>This function has same errors like POST /user, but errors not defined again, they were included with &quot;apiErrorStructure&quot;</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p><code>id</code> of the user.</p>"
          }
        ]
      }
    },
    "body": [
      {
        "group": "Body",
        "type": "String",
        "optional": false,
        "field": "name",
        "isArray": false,
        "description": "<p>Name of the User.</p>"
      },
      {
        "group": "Body",
        "type": "File",
        "optional": false,
        "field": "avatar",
        "isArray": false,
        "description": "<p>Upload avatar.</p>"
      }
    ],
    "filename": "example.js",
    "groupTitle": "User",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/user/:id"
      }
    ],
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NoAccessRight",
            "isArray": false,
            "description": "<p>Only authenticated Admins can access the data.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "UserNameTooShort",
            "isArray": false,
            "description": "<p>Minimum of 5 characters required.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Response (example):",
          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"UserNameTooShort\"\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/user/:id",
    "title": "Thank a user: this is quite a long name indeed",
    "version": "0.3.0",
    "name": "ThankUser",
    "group": "User",
    "description": "<p>This is here to have a long name in the left menu.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p><code>id</code> of the user.</p>"
          }
        ]
      }
    },
    "filename": "example.js",
    "groupTitle": "User"
  },
  {
    "type": "GET",
    "url": "/resource/:resId",
    "title": "Mismatched URL Parameter",
    "name": "GetResource",
    "group": "Warnings",
    "description": "<p>URL contains a parameter ':resId' that is not documented as @apiParam in @api</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "example-warnings.js",
    "groupTitle": "Warnings",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/resource/:resId"
      }
    ]
  },
  {
    "type": "GET",
    "url": "/resource/:resId/sub/:subId",
    "title": "Undocumented URL Parameter",
    "name": "GetSubResource",
    "group": "Warnings",
    "description": "<p>URL contains a parameter ':resId' that is not documented as @apiParam in @api</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "subId",
            "isArray": false,
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "example-warnings.js",
    "groupTitle": "Warnings",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/resource/:resId/sub/:subId"
      }
    ]
  },
  {
    "type": "get",
    "url": "/user/:id",
    "title": "Unused URL Parameter",
    "name": "GetUnused",
    "group": "Warnings",
    "description": "<p>':oops' was defined but does not appear in URL of @api</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": "<p>user id</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "oops",
            "isArray": false,
            "description": "<p>some leftover</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "example-warnings.js",
    "groupTitle": "Warnings",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/user/:id"
      }
    ]
  },
  {
    "type": "post",
    "url": "/api/school/students/:studentId/cloth",
    "title": "Multiple Warnings",
    "name": "createCloth",
    "group": "Warnings",
    "description": "<p>@apiParam 'id' was defined but does not appear in URL of @api URL contains a parameter ':studentId' that is not documented as @apiParam in @api</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "optional": false,
            "field": "id",
            "isArray": false,
            "description": ""
          }
        ],
        "body": [
          {
            "group": "body",
            "type": "String",
            "optional": true,
            "field": "name",
            "isArray": false,
            "description": ""
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "code",
            "isArray": false,
            "description": "<p>200</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n     status: 200\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "example-warnings.js",
    "groupTitle": "Warnings",
    "sampleRequest": [
      {
        "url": "https://apidoc.free.beeceptor.com/api/school/students/:studentId/cloth"
      }
    ]
  }
]
